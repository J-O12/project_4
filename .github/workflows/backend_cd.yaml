
name: My Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.13

      - name: Install pipenv
        run: pip install pipenv

      - name: Install Dependencies
        run: |
          pipenv install --dev      

      - name: Run Lint
        run: pipenv run lint 

      - name: Handle Lint Errors
        if: failure()
        run: echo "Lint failed."

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.13

      - name: Python path
        run: echo $PYTHONPATH

      - name: Install pipenv
        run: pip install pipenv

      - name: Install Dependencies
        run: |
          pipenv install --dev

      - name: Run Tests
        run: pipenv run test

      - name: Handle Test Errors
        if: failure()
        run: echo "Tests failed. Please check and fix the issues."

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.13

      - name: Install pipenv
        run: pip install pipenv

      - name: Install Dependencies
        run: |
          cd ./
          pipenv install --dev

      - name: Run Build
        run: docker -t backend:${{ github.sha }} .

      - name: display image
        run: docker images

      - name: Run echo
        run: echo "Done."

        
  deploy-to-infra:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.13

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-account-id: ${{ secrets.AWS_ACCOUNT_ID }}

      - name: Push to AWS ECR
        working-directory: ./backend
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker build -t backend:${{ github.sha }} .
          docker tag backend:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend:latest


      - name: update kubeconfig
        run: aws eks update-kubeconfig --name cluster

      - name: Deploy to EKS
        run: |
          cd backend/k8s
          
          kubectl apply -f deployment.yml
          kubectl apply -f service.yml